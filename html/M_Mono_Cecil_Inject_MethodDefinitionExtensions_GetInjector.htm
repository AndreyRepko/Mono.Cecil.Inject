<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>MethodDefinitionExtensions.GetInjector Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetInjector method" /><meta name="System.Keywords" content="MethodDefinitionExtensions.GetInjector method" /><meta name="Microsoft.Help.F1" content="Mono.Cecil.Inject.MethodDefinitionExtensions.GetInjector" /><meta name="Microsoft.Help.Id" content="M:Mono.Cecil.Inject.MethodDefinitionExtensions.GetInjector(Mono.Cecil.MethodDefinition,Mono.Cecil.TypeDefinition,System.String,Mono.Cecil.Inject.InjectFlags,System.Int32[],Mono.Cecil.FieldDefinition[])" /><meta name="Description" content="Finds a method that could be used as an injection method (hook) for this method and constructs an instance of from it." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Mono.Cecil.Inject" /><meta name="file" content="M_Mono_Cecil_Inject_MethodDefinitionExtensions_GetInjector" /><meta name="guid" content="M_Mono_Cecil_Inject_MethodDefinitionExtensions_GetInjector" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Mono.Cecil.Inject<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="introduction.htm" title="Mono.Cecil.Inject" tocid="roottoc">Mono.Cecil.Inject</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Mono_Cecil_Inject.htm" title="Mono.Cecil.Inject" tocid="N_Mono_Cecil_Inject">Mono.Cecil.Inject</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Mono_Cecil_Inject_MethodDefinitionExtensions.htm" title="MethodDefinitionExtensions Class" tocid="T_Mono_Cecil_Inject_MethodDefinitionExtensions">MethodDefinitionExtensions Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Mono_Cecil_Inject_MethodDefinitionExtensions.htm" title="MethodDefinitionExtensions Methods" tocid="Methods_T_Mono_Cecil_Inject_MethodDefinitionExtensions">MethodDefinitionExtensions Methods</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Mono_Cecil_Inject_MethodDefinitionExtensions_GetInjector.htm" title="GetInjector Method " tocid="M_Mono_Cecil_Inject_MethodDefinitionExtensions_GetInjector">GetInjector Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Mono_Cecil_Inject_MethodDefinitionExtensions_InjectWith.htm" title="InjectWith Method " tocid="M_Mono_Cecil_Inject_MethodDefinitionExtensions_InjectWith">InjectWith Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>MethodDefinitionExtensions<span id="LSTDF8B28C6_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_0?cpp=::|nu=.");</script>GetInjector Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
                Finds a method that could be used as an injection method (hook) for this method and constructs an instance of
                <a href="T_Mono_Cecil_Inject_InjectionDefinition.htm">InjectionDefinition</a> from it.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Mono_Cecil_Inject.htm">Mono.Cecil.Inject</a><br />
    <strong>Assembly:</strong>
   Mono.Cecil.Inject (in Mono.Cecil.Inject.dll) Version: 1.2.5.0 (1.2.5.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">InjectionDefinition</span> <span class="identifier">GetInjector</span>(
	<span class="keyword">this</span> <span class="identifier">MethodDefinition</span> <span class="parameter">target</span>,
	<span class="identifier">TypeDefinition</span> <span class="parameter">injectionType</span>,
	<span class="identifier">string</span> <span class="parameter">name</span>,
	<span class="identifier">InjectFlags</span> <span class="parameter">flags</span> = <span class="identifier">InjectFlags</span>.None,
	<span class="identifier">int</span>[] <span class="parameter">localsID</span> = <span class="keyword">null</span>,
	<span class="keyword">params</span> <span class="identifier">FieldDefinition</span>[] <span class="parameter">typeFields</span>
)</pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GetInjector</span> ( 
	<span class="parameter">target</span> <span class="keyword">As</span> <span class="identifier">MethodDefinition</span>,
	<span class="parameter">injectionType</span> <span class="keyword">As</span> <span class="identifier">TypeDefinition</span>,
	<span class="parameter">name</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">flags</span> <span class="keyword">As</span> <span class="identifier">InjectFlags</span> = <span class="identifier">InjectFlags</span>.None,
	Optional <span class="parameter">localsID</span> <span class="keyword">As</span> <span class="identifier">Integer</span>() = <span class="keyword">Nothing</span>,
	<span class="keyword">ParamArray</span> <span class="parameter">typeFields</span> <span class="keyword">As</span> <span class="identifier">FieldDefinition</span>()
) <span class="keyword">As</span> <span class="identifier">InjectionDefinition</span></pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="identifier">InjectionDefinition</span>^ <span class="identifier">GetInjector</span>(
	<span class="identifier">MethodDefinition</span>^ <span class="parameter">target</span>, 
	<span class="identifier">TypeDefinition</span>^ <span class="parameter">injectionType</span>, 
	<span class="identifier">String</span>^ <span class="parameter">name</span>, 
	<span class="identifier">InjectFlags</span> <span class="parameter">flags</span> = <span class="identifier">InjectFlags</span>::None, 
	<span class="keyword">array</span>&lt;<span class="identifier">int</span>&gt;^ <span class="parameter">localsID</span> = <span class="keyword">nullptr</span>, 
	... <span class="keyword">array</span>&lt;<span class="identifier">FieldDefinition</span>^&gt;^ <span class="parameter">typeFields</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">target</span></dt><dd>Type: <span class="nolink">MethodDefinition</span><br />This method that is used as a target.</dd><dt><span class="parameter">injectionType</span></dt><dd>Type: <span class="nolink">TypeDefinition</span><br />Type that contains the injection method (hook).</dd><dt><span class="parameter">name</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LSTDF8B28C6_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />Name of the injection method (hook).</dd><dt><span class="parameter">flags</span> (Optional)</dt><dd>Type: <a href="T_Mono_Cecil_Inject_InjectFlags.htm">Mono.Cecil.Inject<span id="LSTDF8B28C6_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>InjectFlags</a><br />
                Injection flags that specify what values to pass to the injection method and how to inject it. This
                method attempts to find the hook method that satisfies all the specified flags.
            </dd><dt><span class="parameter">localsID</span> (Optional)</dt><dd>Type: <span id="LSTDF8B28C6_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_3?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTDF8B28C6_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><span id="LSTDF8B28C6_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_5?cpp=&gt;|vb=()|nu=[]");</script><br />
                An array of indicies of local variables to pass to the injection method. Used only if
                <a href="T_Mono_Cecil_Inject_InjectFlags.htm">PassLocals</a> is specified, otherwise ignored.
            </dd><dt><span class="parameter">typeFields</span></dt><dd>Type: <span id="LSTDF8B28C6_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_6?cpp=array&lt;");</script><span class="nolink">FieldDefinition</span><span id="LSTDF8B28C6_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDF8B28C6_7?cpp=&gt;|vb=()|nu=[]");</script><br />
                An array of class fields from the type the target lies in to pass to the injection method.
                Used only if <a href="T_Mono_Cecil_Inject_InjectFlags.htm">PassFields</a> is specified, otherwise ignored.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Mono_Cecil_Inject_InjectionDefinition.htm">InjectionDefinition</a><br />
                An instance of <a href="T_Mono_Cecil_Inject_InjectionDefinition.htm">InjectionDefinition</a>, if a suitable injection method is found from the given
                type. Otherwise, null.
            <h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <span class="nolink">MethodDefinition</span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.</div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Mono_Cecil_Inject_MethodDefinitionExtensions.htm">MethodDefinitionExtensions Class</a></div><div class="seeAlsoStyle"><a href="N_Mono_Cecil_Inject.htm">Mono.Cecil.Inject Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>